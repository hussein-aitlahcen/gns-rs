searchState.loadedDescShard("gns_sys", 0, "Enumerate various causes of connection termination.  These …\nDescribe the status of a particular network resource\nConfiguration values can be applied to different types of …\nConfiguration options\nHigh level connection status\n“Fake IPs” are assigned to hosts, to make it easier to …\nReturn value of ISteamNetworkintgUtils::GetConfigValue\nDifferent methods of describing the identity of a network …\nDetail level for diagnostic output callback. See …\nSetup callback for debug output, and the desired verbosity …\nHandle used to identify a “listen socket”.  Unlike …\nHandle used to identify a connection to a remote host.\nHandle used to identify a poll group, used to query many …\nA message that has been received.\nLower level networking API.\nMisc networking utilities for checking the local …\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nNo value.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nCreate an ISteamNetworkingConnectionSignaling object from …\nSame as …\nA struct used to describe our readiness to participate in …\nDescribe the state of a connection.\nQuick status of a particular lane\nQuick connection state, pared down to something you could …\nThis callback is posted whenever a connection is created, …\nObject that describes a “location” on the Internet …\nIn a few places we need to set configuration options on …\nOption value\nUsed to return English-language diagnostic error messages …\nStore an IP and port.  IPv6 is always used; IPv4 is …\nUtility class for printing a SteamNetworkingIPAddrRender.\nRFC4038, section 4.2\nAn abstract way to represent the identity of a network …\nUtility class for printing a SteamNetworkingIdentity. E.g. …\nA message that has been received.\nA local timestamp.  You can subtract two timestamps to get …\nIdentifier used for a network location point of presence.  …\nUtility class for printing a SteamNetworkingPOPID.\nCustom memory allocation methods.  If you call this, you …\nCalled from the service thread at initialization time. Use …\nA struct used to describe our readiness to use the relay …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptions for a specific connection.\n[global int32] When probing the SteamDatagram network, we …\n[global FnSteamNetAuthenticationStatusChanged] Callback …\n[connection FnSteamNetConnectionStatusChanged] Callback …\n[global FnSteamNetworkingSocketsCreateConnectionSignaling] …\n[global FnSteamNetworkingFakeIPResult] Callback that’s …\n[global FnSteamNetworkingMessagesSessionFailed] Callback …\n[global FnSteamNetworkingMessagesSessionRequest] Callback …\n[global FnSteamRelayNetworkStatusChanged] Callback that …\nOptions for a specific connection.\n[connection int64] Get/set userdata as a configuration …\n[global int32] When probing the SteamDatagram network, we …\n[connection int32] Enable Dual wifi band support for this …\n[global int32] When probing the SteamDatagram network, we …\n[connection int32] True to enable diagnostics reporting …\n[global float 0–100] Globally duplicate some percentage …\n[global float 0–100] Globally duplicate some percentage …\n[global int32] Amount of delay, in ms, to delay duplicated …\nSimulated jitter/clumping.\nSimulated jitter/clumping.\nSimulated jitter/clumping.\nSimulated jitter/clumping.\nSimulated jitter/clumping.\nSimulated jitter/clumping.\n[global int32].  Delay all outbound/inbound packets by N ms\n[global int32].  Delay all outbound/inbound packets by N ms\n[global float, 0–100] Randomly discard N pct of packets …\n[global float, 0–100] Randomly discard N pct of packets …\n[global float] 0-100 Percentage of packets we will add …\n[global float] 0-100 Percentage of packets we will add …\n[global int32] Extra delay, in ms, to apply to reordered …\nGet/set global option, or defaults.  Even options that …\n[connection int32] The same as IP_AllowWithoutAuth, but …\n[connection int32] Don’t automatically fail IP …\nOptions for a listen socket.  Listen socket options can be …\n[connection int32] For connection types that use “…\n[global int32] When probing the SteamDatagram network, we …\n[global int32] When probing the SteamDatagram network, we …\n[global int32] When probing the SteamDatagram network, we …\n[global int32] When probing the SteamDatagram network, we …\n[global int32] When probing the SteamDatagram network, we …\n[global int32] When probing the SteamDatagram network, we …\n[connection int32] (read only) Maximum message size you …\n[connection int32] Do not send UDP packets with a payload …\n[connection int32] Nagle time, in microseconds.  When …\n[connection string] Comma-separated list of STUN servers …\n[connection int32] When selecting P2P transport, add …\n[connection int32] When selecting P2P transport, add …\n[connection int32] When selecting P2P transport, add …\n[connection int32] What types of ICE candidates to share …\n[connection int32] When selecting P2P transport, add …\n[connection int32] When selecting P2P transport, add …\n[connection int32] When selecting P2P transport, add …\n[global int32] Trace every UDP packet, similar to …\n[connection int32] Upper limit on the number of received …\n[connection int32] Upper limit on total size (in bytes) of …\n[connection int32] Maximum message size that we are …\n[connection int32] Max number of message segments that can …\n[global int32] If N consecutive pings to a port fail, …\n[global int32] If the first N pings to a port all fail, …\n[connection string] For development, a base-64 encoded …\n[global int32] When probing the SteamDatagram network, we …\n[global string] For debugging.  Force ping times to …\n[global string] For debugging.  Override list of relays …\n[global string] Code of relay cluster to force use.  If …\n[global int32] When probing the SteamDatagram network, we …\n[global int32] Minimum number of lifetime pings we need to …\n[global int32] Set all steam datagram traffic to originate …\n[connection int32] Upper limit of buffered pending bytes …\n[connection int32] Minimum/maximum send rate clamp, in …\n[connection int32] Minimum/maximum send rate clamp, in …\n[connection int32] Send of time-since-previous-packet …\nSome options are specific to a particular interface.  Note …\n[connection int32] Set this to 1 on outbound connections …\n[connection int32] Timeout value (in ms) to use after …\n[connection int32] Timeout value (in ms) to use when first …\n[connection int32] Allow unencrypted (and unauthenticated) …\nConnection has been closed by our peer, but not closed …\nWe’ve received communications from our peer (and we know …\nWe are trying to establish whether peers can talk to each …\nConnection is completely inactive and ready to be destroyed\nWe’ve disconnected on our side, and from an API …\nSome connection types use a back channel or trusted 3rd …\nWe’ve disconnected on our side, and from an API …\nDummy value used to indicate an error condition in the API.\nA disruption in the connection has been detected locally.  …\nConnection is completely inactive and ready to be destroyed\nThe POPID “dev” is used in non-production environments …\nMax size of a single message that we can SEND. Note: We …\nMax length of diagnostic error message\nMax possible length of a ping location, in string format.  …\nMax length of the app’s part of the description\nMax length, in bytes (including null terminator) of the …\nMax length, in bytes (include null terminator) of debug …\nSpecial values that are returned by some functions that …\nRemote address.  Might be all 0’s if we don’t know it, …\nNonzero if latency measurement is in progress (or pending, …\nNumber of bytes pending to be sent.  This is data that you …\nNumber of bytes of reliable data that has been placed the …\nSize of the payload.\nSize of the payload.\nFor messages received on connections: what connection did …\nFor messages received on connections: what connection did …\nNon-localized English language status.  For …\nNon-localized English language status.  For …\nStatus\nSummary status.  When this is “current”, …\nCurrent ability to communicate with ANY relay.  Note that …\nStatus obtaining the network config.  This is a …\nWhich field below did you fill in?\nBasic cause of the connection termination or problem. See …\nPrevious state.  (Current state is in m_info.m_eState)\nHigh level state of the connection\nHigh level state of the connection\nType of identity.\nWhich option is being set\nConnection quality measured locally, 0…1.  (Percentage …\nPacket delivery success rate as observed from remote host\nCurrent data rates from recent history.\nConnection handle\nHandle to listen socket this was connected on, or …\nWhat relay are we using to communicate with the remote …\nWhat data center is the remote host in?  (0 if we don’t …\nFor inbound messages: Who sent this to us? For outbound …\nFor inbound messages: Who sent this to us? For outbound …\nWho is on the other end?  Depending on the connection type …\nFor outbound messages, which lane to use?  See …\nFor outbound messages, which lane to use?  See …\nFull connection info\nWhen using ISteamNetworkingMessages, the channel number …\nWhen using ISteamNetworkingMessages, the channel number …\nFor messages received on connections, this is the user data\nFor messages received on connections, this is the user data\nBitmask of k_nSteamNetworkingSend_xxx flags. For received …\nBitmask of k_nSteamNetworkingSend_xxx flags. For received …\nMisc flags.  Bitmask of …\nMessage number assigned by the sender.  This is not used …\nMessage number assigned by the sender.  This is not used …\nCurrent ping (ms)\nEstimate rate that we believe that we can send data to our …\nArbitrary user data that you can use when sending messages …\nArbitrary user data that you can use when sending messages …\nArbitrary user data set by the local application code\nMessage payload\nMessage payload\nFunction used to free up m_pData.  This mechanism exists …\nFunction used to free up m_pData.  This mechanism exists …\nFunction to used to decrement the internal reference count …\nFunction to used to decrement the internal reference count …\nDebug description.  This includes the internal connection …\nHuman-readable, but non-localized explanation for …\nIf you queued a message right now, approximately how long …\nLane-specific queue time.  This value takes into …\nLocal timestamp when the message was received Not used for …\nLocal timestamp when the message was received Not used for …\nInternal stuff, room to change API easily")